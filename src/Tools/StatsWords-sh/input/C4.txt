licence
info
programmation
spécifique
:
programmation
web
xhtml
/
css
/
php
/
javascript
?
●
apache
:
serveur
web
●
html
:
langage
hypertexte
de
description
de
document
●
php
:
langage
de
programmation
interpréter
coter
serveur
●
mysql
:
gestionnaire
de
base
de
données
●
javascript
:
langage
de
programmation
interpréter
coter
client.
choix
:
➢
prix
(gratuit)
➢
qualité
(utilisés
par
entreprise
:
apache
=
2/3
serveur
web)
plan
cours
●
:
6h
td
/
xxh
tp
●
html
➢
xhtml
➢
css
(feuilles
de
style).
●
php
­
mysql
➢
php
de
base.
➢
interaction
avec
sgbdd
➢
création
d'images
à
volée
/
creation
de
pdf....
serveur
web
●
serveur
web
être
application
capable
de
répondre
requête
de
clients.
●
être
connecter
client
via
réseau
(souvent).
●
communiquer
avec
client
à
l'aide
protocole
http.
●
fournir
client
page
html.
serveur
client
type
de
site
distinguer
trois
type
de
site
:
●
site
statique
:
requête
porter
sur
fichier
html.
●
site
dynamique
:
requête
déclencher
sur
serveur
l'execution
d'un
script.
script
produire
page
html.
●
site
"sapin
de
noël"
:
requête
porter
sur
fichier
html
contenir
script
coter
client.
attention
:
commercial
parler
d'un
site
dynamique
parler
(parlait)
d'un
sapin
de
noel....
pouvoir
avoir
site
dynamique
sapin
de
noel...
html
langage
hypertexte
de
description
de
document
●
hypertexte
:
permettre
navigation
non­linéaire
●
interpréter
par
client
http
:
➢
adaptation
client
(taille,
polices...)
●
fournir
description
simple
d'un
document.
●
document
composer
de
texte,
images.
utiliser
:
xhtml
1.0
➢
conforme
recommandation
w3c
➢
indépendant
(?)
navigateur.
html
architecturer
d'un
document
●
format
d'un
document
html
:
texte
simple.
●
être
dans
fichier
être
affiché,
sauf
instruction
html.
●
instruction
sous
forme
de
balise
(ou
«
t
ags
»
).
●
2
grandes
partie
dans
document
:
➢
doctype
:
indique
version
langage
être
utilisee
➢
entêter
(head)
:
information
générales
sur
page
➢
corps
(body)
:
être
afficher
sur
client.
html
fonctionnement
balise
●
balise
être
délimiter
par
crochets.
●
devoir
êtres
ouvertes
fermées.
●
pouvoir
avoir
attribut
(options).
<p>
texte
<img
src="logo.jpg"
alt="logo
de
compagnie
vpage.com"
/>
texte.
</p>
html
exemple
premier
page
html
typique
:
<!
!doctype
.
.
.
.
.>
<html>
<head>
<title>
premi&egrave;re
page</title>
</head>
<body>
<p>le
texte
dans
premi&eagrave;re
page.
</p>
</body>
</html>
html
balise
de
structuration
document
●
<doctype>
:
renseigner
sur
version
langage
utiliser
●
<html></html>
:
...
●
<head></head>
:
entête.
●
<body></body>
:
corps
document.
html
balise
de
mise
en
forme
page
pour
décrire
découpage
page
en
zone
:
●
<div>
</div>
:
unité
faire
sens
pour
site
(ex
:
entete,
menu,
)
pour
découpage,
avoir
(désormais
obsolète
malvenu)
:
­
<frameset><frame>
­
<table>
<tr><td>
html
balise
de
mise
en
forme
de
texte
:
●
<p></p>
:
paragraphe.
●
<strong>
</strong>
:
accentué
(gras
visuellement)
●
<em>
</em>
:
mettre
en
évidence
(italique
visuellement)
●
<sup></sup>
:
exposant.
(superscript).
●
<sub></sub>
:
indice
(subscript).
html
balise
de
mise
en
forme
de
texte
2
●
<xmp></xmp>
:
interpréter
(affiché
quel).
●
<h1></h1>
:
premier
niveau
de
titre.
(aussi
<h2>...
●
<!
!­­
toto
­­>
:
commentaire.
●
<ol></ol>
:
liste
numérotée.
➢
<li></li>
:
élement
de
liste.
●
<ul>
:
liste
à
puces.
html
balise
de
mise
en
forme
de
texte
:
forbidden
:
utiliser!
!
●
<br>
:
passage
à
ligne.
●
<hr>
:
ligner
horizontale.
●
<i></i>
:
italique.
●
<b></b>
:
gras
(bold).
html
balise
utiles
●
<img>
:
insertion
d'images.
●
<a></a>
:
ancre.
pour
liens.
●
<table></table>
:
tableau.
➢
<tr></tr>
:
ligne
d'un
tableau.
➢
<td></td>
:
case
d'un
tableau.
●
attribut
:
colspan/rowspan
:
multi
colonne/ligne.
html
balise
bloc
inline
deux
type
de
balise
:
●
bloc
(des
partir
entières
de
texte)
:
<p>
<div>
<h1>
●
en
ligne
(inline)
:
enrichir
portion
de
texte
:
<strong>
<em>
<img>
.....
­
bloc
suivre
(par
défaut)
l'un
en
de
l'autre.
­
inline
suivre
(par
défaut)
l'un
avoir
coter
de
l'autre.
­
inline
pouvoir
contenir
inline
(et
texte)
­
bloc
pouvoir
contenir
blocs,
inline,
texte.
html
feuille
de
style
appeler
css
pour
«
cascading
styler
sheets
»
.
●
objectif
:
définir
style
d'un
document
html
de
contenu.
●
intérêt
:
site
être
beau,
rempli.
.vous
vouloir
changer
l'image
de
fond
de
pages.
.
●
mettre
en
uvre
:
dans
fichier,
référencer
dans
document
html.
version
css
actuelles
:
2.0
incompatible
avec
navigateur
html
fonctionnement
feuille
de
style
document
html
indique
l'utilisation
de
feuille
de
style
avec
ligne
suivante
dans
l'entête
:
<link
rel=stylesheet
type="text/css"
href="mafeuille.css">
feuille
de
style
indiquer
règles
pour
formatage.
/*
definitions
titre
niveau
2
*/
h2
{color:#0000ca;
text­align:left;
font­size:large;
font­style:italic}
html
limiter
problème
de
police
grâce
css
préciser
trois
police
possibles
dans
l'ordre
de
préférence,
en
fonction
de
disponibilité.
h3
{font­family:
verdana,
arial,
sans­serif;
font­size:
14pt;
color:
red;
background­color:
#ffffff;
}
html
surcharger
tags
grâce
css
ici,
utiliser
balise
<p>
définir
nouvelle
classe
:
petit
p.petit
{
font­family:
times,
serif;
font­size:
10pt;
color:black;
font­style:italic;
background­color
:
#ffffff;
}
<p
class="petit">
aller
etre
ecrit
en
petit
</p>
html
utiliser
l'hérédité
dans
css
pouvoir
créer
sous-­classes
applicables
à
balise.
.colored{
color:red;
}
.marge
{
margin­left:30px}
être
pratique
pour
faire
chose
:
<h1
class="colored">
gros
titre
rouge
</h1>
<b
class="colored">
texte
gras
rouge
</b>
<p
class="marge">
paragraphe
avec
marge
</p>
html
utiliser
l'hérédité
dans
css
2
balise
<span>
être
utiliser
en
css
modifier
l'aspect
d'une
zoner
particulière
de
données.
.rouge{
color:red;
}
être
pratique
pour
faire
chose
:
<span
style=
"font­size:
16pt;
color:
fuchsia;
background­color:
#ffffff;
"
>un
truc
occasionnel</span>
<span
class="red">juste
mettre
en
rouge.</span>
en
abuser..
html
utiliser
l'hérédité
dans
css
3
balise
<div>
être
utiliser
en
css
modifier
l'aspect
de
paragraphe
.marge{
margin­left:30px
}
être
pratique
pour
faire
chose
:
<div
class=
"marge"
>tout
paragraphe
avec
marge.
c'est
<p>
?
non,
voir
ca
loin.
.</div>
html
lien
dans
css
pseudos
classe
lier
lien
(balise
<a>)
:
link
:
lien
normal.
visited
:
lien
deja
visité.
hover
:
passer
avec
souris.
active
:
avoir
cliquer
dessus.
a:link
{
color:blue;
text­decoration:underline;
background­color:
#ffffff;
}
a:visited
{
color:purple;
text­decoration:underline
;
background­color:
#ffffff;
}
a.hover
{
color:red;
text­decoration:underline;
background­color:
#ffffff;
}
a:active
{
color:
red;
font­weight:
bold;
background­color:
#ffffff;
}
html
positionnement
dans
css
modèle
de
boite
:
valoir
pour
balise
bloc
:
en
anglais
(et
en
css)
:
margin
:
marger
externe.
border
:
bordurer
padding
:
marger
interne
positionnement
css
positionnement
dans
flux
positionnement
normal
:
dans
flux.
élément
un
en
autres,
par
rapport
:
­
marge
internes
containeur.
­
marge
externes
éléments.
avec
ceci,
pouvoir
"déplacer"
élément
dans
containeur,
contenu
d'un
élément
sein
de
élément.
pouvoir
placer
deux
bloc
l'un
à
coter
de
l'autre!
!
positionnement
css
positionnement
fichier
html
:
<!
!doctype
html
public
"­//w3c//dtd
xhtml
1.0
strict//en"
"http://www.w3.org/tr/xhtml1/dtd/xhtml1­strict.dtd"
>
<html>
<head>
<meta
http­equiv="content­type"
content="text/html;charset=iso­8859­1"
/>
<title>
test
</title>
<link
rel="stylesheet"
href="flux.css"
type="text/css"
/>
</head>
<body>
<div
id="entete">
entete
</div>
<div
id="navigation">
barrer
de
navigation
</div>
<div
id="milieu">
milieu
<div
id="menu">
</div>
<div
id="corps">
corps
texte</div>
</div>
<div
id="footer">
pied
de
page
</div>
</body>
</html>
positionnement
css
positionnement
css
vide
:
pour
résultat
:
body{
color:
#000;
background­color:
#800;
}
#entete{
background­color
:
#080;
}
#navigation{
background­color
:
#008;}
#milieu{
background­color
:
#444;}
#menu{
background­color
:
#880;}
#corps{
background­color
:
#808;}
#footer{
background­color
:
#088;}
positionnement
css
positionnement
:
marge
centrage
rajouter
ligne
suivantes
pour
résultat
:
#entete{
width
:
100px;
margin
:
auto;
}
#menu{
width
:
200px;}
#corps{
margin­left:200px;}
positionnement
css
positionnement
flotter
déplacer
élément
avoir
gauche
avoir
droite
dans
parent.
reste
contenu
parent
positionner
de
l'élément
déplacé.
attention
:
float
sortir
flux
courant,
n'est
compter
dans
calcul
de
hauteur
conteneur,
celle­-ci
n'est
spécifiée.
pouvoir
"dépasser"
en
hauteur.
récapitulatif
:
*
l'élément
être
placer
dans
flux.
autre
élément
bloc
être
placer
avant
lui,
l'élément
flottant
positionner
en
dessous;
élément
bloc
suit,
dernier
être
placer
dessous.
bref,
comportement
classique
positionnement
en
flux
*
l'élément
avoir
recevoir
propriété
float
être
"poussé"
à
gauche
à
droite
de
conteneur.
*
élément
suivre
sein
conteneur
placer
de
lui.
positionnement
css
positionnement
float
rajouter
ligne
suivantes
pour
résultat
:
#menu{
float:left;}
positionnement
css
positionnement
:
float
.
.
allonger
menu,
avoir
:
taille
de
div
de
menu
n'est
prendre
en
compte
pour
calcul
de
taille
de
div
milieu.
.
noter
pied
de
page
n'appartient
avoir
div
milieu.
.
positionnement
css
positionnement
:
float
clear
:
obliger
boite
avoir
avoir
coter
libre.
boite
placer
sous
autres
boite
flottantes
floats
coter
spécifié.
rajouter
ligne
suivantes
#footer{
clear:left;}
noter
vide
rouge
entre
corps
de
texte
footer
:
div
milieu
s'étend
jusqu'au
pied
de
page!
!
pouvoir
avoir
clear:right
clear:both
positionnement
css
positionnement
absoudre
positionner
élément
"en
dur".
pour
spécifier
position
d'un
élément,
donner
position
de
coin
supérieur
gauche.
pouvoir
donner
l'indiquer
suivre
:
­
haut
droite
(+
largeur)
l'élément
être
retirer
flux.
positionnement
être
même
position
dans
fichier
html.
.
positionnement
css
positionnement
absoudre
repositionne
élements
en
absolu.
rajouter
ligne
suivantes
#milieu{
position:absolute;
top:5em;
left:5%;
right:5%;
}
#footer{
position:absolute;
top:20em;
left:1%;
right:1%;
}
noter
taille
de
div
milieu.
attention
chevauchements.
.
positionnement
css
positionnement
fixer
élément
fixes
bouger
position
défilement
dans
fenêtre
navigateur.
.
ici,
barre
l'entête
être
fixes.
#entet#entete{
position:fixed;
top:0;
left:1em;
right:1em;
z­index:2;
margin
:
auto;
background­color
:
#080;
}
#navigation{
position:fixed;
top:1em;
left:1em;
right:1em;
z­index:2;
background­color
:
#008;
}
positionnement
css
positionnement
relatif
aborder
ici!
!
positionnement
css
remarque
­
balise
bloc
pouvoir
être
traiter
balise
inline
avec
propriété
display
(:inline
:bloc)
­
attention
à
fusion
de
marges.
­
navigateur
être
récalcitrants
:
­
évaluation
tailles,
comportement
fixed,
floats,
n'interprètent
chose
de
même
façon.
.
­
trouver
gabarit
éprouver
(alsacreation)
­
tester
site
avec
navigateurs,
version
navigateurs.
.
.
pratiquez!
!
php
(hypertext
pre-processor)
qu'est
php
?
langage
de
script
généraliste
(perl
?)
pour
:
langage
interpréter
par
apache
pour
générer
page
html
standard
être
transmettre
client.
s'agit
de
script
exécuter
«
coter
serveur
»
.
pour
:
php4
similaire
:
asp
(active
server
pages),
de
chez
microsoft.
syntaxe
proche
language
c.
php
(hypertext
pre-processor)
qu'est
php
?
langage
de
script
généraliste
(perl
?)
pour
:
langage
interpréter
par
apache
pour
générer
page
html
standard
être
transmettre
client.
s'agit
de
script
exécuter
«
coter
serveur
»
.
pour
:
php4
similaire
:
asp
(active
server
pages),
de
chez
microsoft.
syntaxe
proche
language
c.
php
(hypertext
pre-processor)
●
différence
avec
script
«
cgi
»
:
●
script
cgi
:
exécutable
lancer
par
apache
pour
générer
html.
●
php
:
code
html
dans
insérer
directives
php.
(gain
de
temps...)
●
coter
client
:
réception
résultat,
sans
connaissance
code
(sécurité)
php
fonctionnement
ecrire
php
:
●
fichier
php
porter
l'extension
.php
●
c'est
fichier
html
classique
contenir
balise
pour
indiquer
partie
être
«
en
php
»
●
passer
«
mode
texte
»
«
mode
php
»
avec
balise
<?php
?>
<?php
echo
"bonjour";
echo
"le
monde";
?>
php
instruction
php
être
semblable
langage
c
:
●
instruction
séparer
par
virgules;
●
commentaire
par
//
/*
...
*/
●
de
mot
clef
communs
(if,
for,
while,
return,
switch,
==
)
variables
php
●
déclaration
explicite
type
d'une
variable
nécessaire.
(type
d'une
variable
déterminer
par
contexte
d'utilisation.)
●
forcer
type
:
int
settype
(
string
var
,
string
type)
●
transtypage
(cast)
:
$mon_double
=
(double)
mon_int;
●
obtenir
type
d'une
variable
:
echo
gettype($ma_variable);
●
vérifier
type
d'une
variable
:
if
is_int($ma_variable)
{}
●
nom
de
variables
sensibles
à
casse.
variables
php
●
type
scalaires
$mon_bool=true;
●
booléen
$mon_entier=0;
●
entier
$mon_float
=
0.123;
●
nombre
à
virgule
flottante
●
chaîne
de
caractère
$ma_chaine
=
"on
bitin";
●
type
composer
:
●
tableau
$mon_tab
=
array(1,2,3);
●
objet
similaire
:
classe
c++
(voir
loin)
●
type
spéciaux
:
●
ressourcer
chose
bizarres
(connexions
ftp.
.
voir
loin)
●
null
absence
de
valeur.
$var
=
null;
variables
php
relâchement
sur
type
variables
pouvoir
poser
problème
de
comparaison
:
utiliser
l'opérateur
d'égalité
«
===
»
chaine
de
char
php
●
spécification
de
chaine
:
●
guillemet
simples
:
nom
de
variables
développés.
$chaine
=
'toto
$var
\n';
●
guillemet
doubles
:
nom
de
variables
développés.
$chaine
=
"toto
$var
\n";
●
syntaxe
heredoc
:
guillemet
doubles
sans
guillemets.
.
$chaine
=
<<<eod
bonjour,
m
appeler
"$nom"
eod;
tableau
php
définition
:
●
tableau
php
être
association
ordonner
:
valeur
être
associer
à
clef.
●
clef
être
entier
chaîne
●
valeur
pouvoir
être
de
type.
implémentation
permettre
de
faire
dictionnaires,
table
de
hachage,
piles.
.
tableau
php
création
de
tableau
:
fonction
array
$tab
=
array(15);
$tab=
array(12);
//
ecrase
tableau
précédent
$a1
=
array("un","deux","trois","nous
aller
bois");
$a2
=
array(1
=>
"un","deux","trois","nous
aller
bois");
$a3
=
array(1
=>
"un",2
=>
"deux",3
=>
"trois",4
=>
"nous
aller
.
.");
tableau
php
manipulation
d'éléments
de
tableau
$tab
=
array(15);
$tab[]=12;
//
ajouter
12
à
fin
tableau
(index
1)
$tab[1]=24
//
remplacer
12
par
24
unset($arr[0]);
//
supprimer
l'élément
de
clef
0
unset($arr);
//
supprimer
tableau
tableau
php
afficher
tableau
:
mot
clef
«
foreach
»
<?php
$tab
=
array('rouge','bleu','vert','jaune');
foreach
(
$tab
avoir
$couleur
)
{
echo
"aimez
couleur
$couleur?\n";
}
/*
affiche
:
aimer
couleur
rouge?
aimer
couleur
bleu?
aimer
couleur
vert?
aimer
couleur
jaune?
*/
?>
tableau
php
modifier
élément
d'un
tableau
:
<?php
foreach(
$tab
avoir
$cle
=>
$couleur
)
{
//
marcher
//$couleur
=
strtoupper($couleur);
//marche
:
$couleurs[$cle]
=
strtoupper($couleur);
}?>
tableau
php
exercice
:
●
ecrire
page
html
afficher
page
suivante
:
●
ecrire
page
php
afficher
tableau
1d
sous
forme
précédente.
●
ecrire
page
php
faire
même
chose
tableau
2d.
tableau
php
fonction
utiles
de
manipulation
de
tableau
:
●
reset($array)
remettre
pointeur
interne
de
tableau
début.
●
pos($array)
retourner
valeur
de
l'élément
courir
d'un
tableau.
●
key($array)
retourner
l'indice
de
l'élément
courir
d'un
tableau.
●
current($array)
retourner
valeur
de
l'élément
courir
d'un
tableau.
●
next($array)
avancer
pointeur
interne
d'un
tableau.
●
prev($array)
reculer
pointeur
courir
de
tableau.
●
end($array)
positionner
pointeur
de
tableau
en
fin
de
tableau.
●
each($array)
retourner
paire
clé/valeur
courante
avancer
pointeur
de
tableau.
de
fonction
renvoyer
false
en
cas
de
problème.
tableau
php
mot­-clef
list
:
transformer
liste
de
variables
en
tableau.
$info
=
array('rhum',
'transparent',
'alcool');
//
liste
de
variables
list
($drink,
$color,
$power)
=
$info;
echo
"$drink
être
$color
l'$power
rendre
particulier.\n";
//
liste
de
variables
list
($drink,
,
$power)
=
$info;
echo
"$drink
contenir
de
l'$power.\n";
//
bien,
n'utilisons
troisième
list(
,
,
$power)
=
$info;
echo
"j'ai
besoin
d'$power!
!\n";
tableau
php
utilisation
de
list
:
parcours
de
tableau
$info
=
array('rhum',
'transparent',
'alcool');
while
(list
($key,
$val)
=
each
($info))
{
echo
"$key
=>
$val
\n";
}
tableau
php
fonction
opérateur
utiles
pour
tableau
:
●
opérateur
+
ajoute
deux
tableaux.
(clefs
égales.
)
●
array_merge
($tab1,
$tab2.
.
)
ajouter
deux
tableau
(clefs
égales.
.)
●
count
($tab)
compter
élément
d'un
tableau.
●
array_keys($tab)
retourner
clé
d'un
tableau
●
array_values($tab)
retourner
valeur
d'un
tableau
●
array_key_exists($key,
$tab)
regarder
clef
existe.
●
array_search($val,$tab)
recherche
clé
associer
à
valeur.
●
array_flip($tab)
:
retourner
tableau
:
clef
<­>
valeur
de
fonction
renvoyer
false
en
cas
de
problème.
tableau
php
exemple
de
fusion
de
tableau
:
<?
+
merge.
.
?>
tableau
php
fonction
utiles
de
tri
de
tableau
:
●
sortir
($array
)
trier
tableau
par
valeur
croissantes.
●
rsort
($array
)
trier
tableau
par
valeur
décroissantes.
●
ksort($array)
trier
tableau
par
valeur
de
clef
croissantes.
●
krsort($array)
trier
tableau
par
valeur
de
clef
décroissantes.
●
shuffle
($array
)
mélanger
élément
d'un
tableau.
de
fonction
renvoyer
false
en
cas
de
problème.
fonction
php
définir
appeler
fonction
function
sommer
($arg1,
$arg2,$arg3)
{
print
"$arg1";
$retval
=
$arg1+$arg2+$arg3;
return
$retval;
}$toto=5;
$resu
=
somme(1,2,$toto);
print
"$resu";
fonction
php
passager
argument
d'une
fonction
passage
par
valeur
:
fonction
modifier
arguments.
function
bidon
($arg1)
{
$arg1=0;
}
$toto=15;
bidon($toto);
echo
"toto
=
$toto";
fonction
php
passager
de
paramètre
par
référence
pour
pouvoir
modifier
variable
temps
<?php
function
add_some_extra(&$string)
{$string
.=
',
plus.';
}
$str
=
'ceci
être
chaîne';
add_some_extra($str);
echo
$str;
//
affiche
'ceci
être
chaîne,
plus.'
?>
fonction
php
passager
de
paramètre
par
référence
pour
pouvoir
modifier
variable
<?php
function
foo
($bar)
{
$bar
.=
',
plus.';
}
$str
=
être
chaîne';
foo
($str);
echo
$str;
//
affiche
'ceci
être
chaîne'
foo
(&$str);
echo
$str;
//
affiche
'ceci
être
chaîne,
plus.'
?>
fonction
php
paramètre
par
défaut
fonction
<?php
function
servir_apero
($type
=
"ricard")
{return
"servir
verre
de
$type.\n";
}
echo
servir_apero();
echo
servir_apero("whisky");
?>
valeur
par
défaut
:
constantes
paramètre
avec
valeur
par
défaut
être
passer
après
autres
fonction
php
nombre
de
paramètre
variables
●
passer
tableau
de
variables
(le
simple)
●
utiliser
fonction
suivantes
(en
tp).
●
func_num_args
,
●
func_get_arg
●
func_get_args
.
inclusion
de
fichier
php
pour
inclure
librairie
de
fonction
:
●
mot
clef
●
«
require
»
«
require_once
»
«
include
»
«
include_once
»
●
différencier
par
gestion
d'erreur
:
●
inclure
exécuter
fichier
php.
●
«
require
»
générer
erreur
(le
script
s'interrompt)
●
«
include
»
générer
alerte
(le
script
continue).
inclusion
de
fichier
php
exemple
<?php
//
avec
chaine
constante
:
require
'prepend.php';
//
avec
variable
:
require
$somefile;
//
en
pseudo
fonction
:
require
('unfichier.txt');
?>
variables
prédéfinies
php
lister
variables
prédéfinies
(auto
globales
/
super
globales)
$globals
//
ref
sur
var
globales.
clef
=
nom
de
variable.
$_server
//
variables
fournir
par
httpd
relatives
script
courant.
$_get
//
variables
fournir
par
http
en
méthode
get.
$_post
//
variables
fournir
par
http
en
méthode
post.
$_cookie
//
variables
fournir
par
http
dans
cookies.
$_files
//
variables
fournir
par
http
suite
à
chargement
de
fichier.
$_env
//
variables
fournir
par
l'environnement.
$_request
//
variables
fournir
par
mécanisme
d'entrée.
$_session
//
variables
enregistrer
dans
session.
connaître
variables
prédéfinies:
phpinfo();
porter
variables
en
php
●
variable
utiliser
dans
fonction
être
locale!
!
●
portée
d'une
variable
concerner
totalité
script.
●
pour
récupérer
variable
globale
dans
fonction
:
●
utiliser
mot
clef
«
global
»
.
●
utiliser
tableau
$globals
●
variables
statiques
:
en
c
formulaire
html
faire
?
utiliser
formulaire
dans
cas
suivre
:
●
l'utilisateur
devoir
fournir
infos
serveur.
●
serveur
devoir
traiter
infos.
●
serveur
renvoyer
réponse
client.
formulaire
être
mettre
en
forme
en
html.
formulaire
html
début
d'explication
information
fournir
formulaire
devoir
être
identifier
pour
traitement.
porter
nom.
●
contenu
de
l'information
dépendre
type
d'information.
●
serveur
traire
renvoyer
réponse
client.
formulaire
être
mettre
en
forme
en
html.
formulaire
html
ecriture
d'un
formulaire
html
:
<form
action=
"
mon_script.php
method=
"
post">
nom
être
:
<br>
<input
type="text"
name="yourname">
<p>
être
sport
prefere
?
<br>
<input
type="text"
name="favoritesport">
<p>
<input
type="submit"
name="submit"
value="envoyez!
!">
</form>
formulaire
html
résultat
formulaire
précédent
:
formulaire
html
<inputs>
exister
distinguer
par
l'attribut
type
●
text
:
ligne
de
texte
●
password
:
caché.
●
hidden
:
invisible
(pour
passer
variables).
●
checkbox
:
selection
multiple.
●
radio
:
selection
d'une
possibilité
parmi
x.
●
submit
:
bouton
d'envoi
de
formulaire
●
reset
:
bouton
de
remise
dans
l'état
par
défaut
●
file
:
saisir
d'un
nom
de
fichier
(et
bouton
parcourir.
.)
formulaire
html
autres
balise
de
formulaire
attention,
être
balise
●
<select></select>
:
liste
de
sélection
déroulante.
●
<option></option>
:
option
de
liste
déroulante.
●
<textarea></textarea>
:
zone
de
texte
multilignes.
.
●
<button></button>
:
bouton.
formulaire
html
traitement
formulaire
:
script
php
●
formulaire
être
envoyer
à
script
définir
par
l'attribut
action
de
balise
<form>
(ici
mon_script.php)
●
deux
méthode
d'envoi
:
get
post
définir
par
l'attribut
method
de
balise
<form>
(ici
post)
●
contenu
formulaire
être
accessible
via
variable
meta­-globale
(ici
$_post$)
●
champ
formulaire
créer
variable
porter
nom
(attention
checkbox.
.)
●
résultat
traitement
être
renvoyer
client.
utiliser
print_r($_post)
pour
debugger.
.
formulaire
html
traitement
formulaire
:
script
php
<?php
$name
=
$_post["yourname"];
$sport
=
$_post["favoritesport"];
printf
("salut
%s\n",$name);
printf
("vous
aimer
%s!
!\n",$sport);
?>
formulaire
html
résultat
traitement
formulaire
précédent
:
formulaire
html
méthode
post
méthode
get
●
méthode
get
●
méthode
par
défaut.
●
formulaire
être
passer
par
ajout
à
l'url.
●
requête
avoir
forme
:
"get
/doc.html?var1=val1&var2=val2..
.
http/1.0"
●
script
php
pouvoir
récupérer
avec
méta-­globale
$_get
●
bookmarkable.
●
petits
volume
de
données.
formulaire
html
méthode
post
méthode
get
●
méthode
post
●
formulaire
être
passer
après
l'url.
●
donnée
être
transmettre
sur
l'entrée
standard
script.
●
script
php
pouvoir
récupérer
avec
$_post
●
bookmarkables
●
petits
gros
volume
de
données.
session
cookies
but
:
conserver
information
de
navigation
d'un
client
sur
serveur.
exemple
d'utilisation
:
➢
identification
(accès
controlé)
➢
panier
d'achat
➢
affichage
adapter
contexte.
en
effet
:
http
fonctionner
en
mode
connecté.
cookies
●
qu'est
?
➢
fichier
créer
par
navigateur
sur
poste
client,
à
demande
serveur.
➢
sur
mdk9.2,
cookies
de
mozilla
être
placer
dans
fichier
cookies.txt.
●
fonctionnement
:
➢
navigateur
connecter
à
domaine
envoyer
serveur
cookies
rattacher
domaine.
➢
cookie
avoir
durée
de
vie
limitée.
être
supprimer
lorsqu'il
être
périmé.
cookies
●
cookies
être
créer
coter
client
:
➢
problème
d'acceptation.
●
php
gérer
cookies
de
façon
simple.
➢
cookies
être
envoyer
en­tête
document
(avant
autre
chose).
●
envoyer
cookie
:
bool
setcookie
(string
name,
string
value,
int
expire,
string
path,
string
domain,
int
secure)
●
regarder
cookies
:
$_cookie
attention
:
cookies
envoyer
avant
chose
(doctype).
cookies
exemple
:
<?php
$duree
=
24*60*60;
//
1
journee
en
secondes!
!
$value=$_server["remote_addr"];
setcookie("moncookie",$value,time()+$duree,"/","127.0.0.1");
?>
<html>
</body>
venir
de
recevoir
cookie
<br>
<a
href="lire_cookie.php">
lire
cookie
</a>
</body></html>
cookies
avoir
besoin
cookies
:
●
vérifier
pouvoir
utiliser
:
envoyer
en
un
regarder
être
reçu.
session
●
qu'est
c'est
:
●
identifier
sid
associer
à
navigateur
accéder
à
page.
●
sid
être
définir
par
serveur.
●
coter
serveur,
stocker
pour
sid
ensemble
de
variables.
●
mode
de
passage
sid
:
●
par
url.
sécurisé.
●
par
cookie.
risque
de
acceptation
cookies.
●
choix
mode
de
passage
:
php.ini
●
accès
variables
de
session
:
$_session
session
●
utiliser
session
:
<?php
session_start();
if
(!
!isset($_session['compteur']))
{
$_session['compteur']
=
0;
}
else
{
$_session['compteur']++;
}
?>
cookies
session
●
authentification
sécuriser
(ma
banque)
:
●
authentification
par
session.
➢
limiter
transmissions.
●
passage
sid
par
cookie.
➢
par
l'url.
●
cookie
à
durée
de
vie
de
0
➢
détruire
fermer
navigateur.
●
https
:
échange
de
donnée
être
cryptés.
➢
l'url
passer
en
clair
manipulation
de
fichier
en
php
script
exécuter
par
serveur
:
droit
sur
fichier
être
d'apache
nobody.
●
obtenir
information
sur
fichier
locaux
●
file_exists
,
is_dir,
is_executable,
is_file,
is_link,
is_readable,
is_writable
●
stat,
lstat,
readlink
●
fileowner,
filesize,
filegroup,
fileinode,
fileperms
●
fileatime,
filemtime
●
disk_free_space,
disk_total_space
●
basename,
dirname,
manipulation
de
fichier
en
php
script
exécuter
par
serveur
:
droit
sur
fichier
être
d'apache
nobody.
●
fonction
bash­like
:
●
créer
:
touch,
mkdir,
link,
symlink,
copy,
tempnam
●
déplacer,
effacer
:
rename,
rmdir
●
modifier
droit
:
umask,
chmod,
chmod,
chgroup
manipulation
de
fichier
en
php
fonction
c­like
●
«
pointeur
de
fichier
»
utiliser
être
de
type
ressource.
●
ouverture
fermeture
:
fopen,
fclose,
feof,
fflush
●
répertoire
:
opendir,
readdir;
●
déplacement
:
rewind,
fseek
●
ascii
:
fscanf,
fprint,
fgetc,
fgets,
fgetss
(sécu
tags)
●
binaire
:
fread,
fwrite.
manipulation
de
fichier
en
php
fonction
typiques
php
●
glob
:
trouver
nom
de
fichier
correspondre
à
règle.
foreach
(glob("*.txt")
avoir
$filename)
{echo
$filename;}
●
file
:
mettre
contenu
d'un
fichier
dans
tableau
foreach
(file
("toto.txt",
"./")
avoir
$ligne)
{echo
$ligne;}
●
file_get_contents
:
file
dans
chaine.
echo
filer
("toto.txt",
"./");
fichier
php
afficher
contenu
d'un
répertoire
<?php
$handle=opendir('.');
echo
"pointeur
de
dossier:
$handle
<br>";
echo
"fichiers:
<br>";
while
($file
=
readdir($handle))
{
echo
"$file
<br>";
}
closedir($handle);
?>
exemple
php
faire
:
●
page
afficher
image
d'un
répertoire.
●
page
afficher
●
tas
d'apercus
d'images.
●
lier
images.
●
commentaire
apercu.
●
faire
seules
personne
pouvoir
voir
images.
image
confidentielles,
juste
privées.
php
–
postgress
fonction
utiles
●
pg_connect
:
connecter
sur
serveur
postgress
●
pg_connection_status
:
.
.
●
pg_query
:
faire
requete.
●
pg_fetch_array
:
lire
ligne
de
resultat
dans
tableau.
●
pg_fetch_row()
:
lire
ligne
dans
tableau
(indices
colonnes)
●
pg_close
:
déconnecter
exemple
php
–
postgress
exemple
de
connecter
<?php
$dbconn
=
pg_connect("dbname=marie");
$dbconn2
=
pg_connect("host=localhost
port=5432
dbname=marie");
$dbconn3
=
pg_connect
("host=sheep
port=5432
dbname=marie
user=mouton
password=baaaa");
$conn_string
=
"host=sheep
port=5432
dbname=test
user=lamb
password=bar";
?>
exemple
php
–
postgress
exemple
de
requete
$db
=
pg_connect("..
");
$query
=
"select
*
from
friends";
$result
=
pg_query($db,
$query);
$row=0;
$numrows
=
pg_numrows($result);
do
{
$myrow
=
pg_fetch_row
($result,$row);
echo
$myrow[0].$myrow[1].
$myrow[2];
$row++;
}
while
($row
<
$numrows);
génération
d'images
en
ligne
falloir
remplir
ici...
bibliothèque
gd.
sécurité
considération
de
sécurité
:
rappel
●
droit
scripts.
●
conservation
de
renseignement
(cookies/session)
●
moyen
de
loguer
sur
sgbdr.
●
sécurisation
échange
client
/
serveur.
